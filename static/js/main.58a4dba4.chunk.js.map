{"version":3,"sources":["pages/Home/Header/styles.module.scss","components/PageSection/styles.module.scss","components/UI/Slider/styles.module.scss","pages/Home/styles.module.scss","store/slices/geolocations/index.ts","api/cleint.ts","constants/urls.ts","api/locations.ts","store/slices/locations/index.ts","api/weather.ts","store/slices/weather/index.ts","store/slices/index.ts","store/store.ts","store/selectors/index.ts","components/UI/Slider/index.tsx","store/slices/weather/types.ts","components/PageSection/index.tsx","pages/Home/Header/index.tsx","hooks/useDebounce.ts","pages/Home/Weather/index.tsx","pages/Home/index.tsx","utils/index.ts","components/App/index.tsx","index.tsx","pages/Home/Weather/styles.module.scss"],"names":["module","exports","geolocation","createSlice","name","initialState","position","loading","error","reducers","requestGeolocationPending","state","requestGeolocationSuccess","action","payload","requestGeolocationError","actions","client","axios","create","baseURL","headers","common","Accept","interceptors","response","use","data","getLocationsByQuery","query","get","params","getLocationsByCoords","coords","lattlong","latitude","longitude","locations","list","selected","getLocationsPending","getLocationsSuccess","getLocationsError","setSelectedLocation","fetchLocationsByQuery","dispatch","a","fetchLocationsByCoords","getWeather","woeid","weather","current","getWeatherPending","getWeatherSuccess","getWeatherError","fetchWeatherByWoeid","RootReducer","combineReducers","reducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","selectState","Slider","value","onChange","rest","className","styles","type","WeatherAbbrs","PageSection","innerClass","outerClass","children","classnames","PageSectionInner","Header","useDispatch","useSelector","shallowEqual","useState","options","setOptions","fetchLocationsDebounced","callback","wait","argsRef","useRef","timeout","cleanup","clearTimeout","useEffect","args","setTimeout","useDebounce","useCallback","mapOptions","length","map","location","label","title","getWeatherByWoeid","Number","isLoading","Boolean","isLoadingWithWeather","HeaderInner","Searchbar","id","SearchLabel","htmlFor","SearchbarInput","placeholder","isDisabled","isSearchable","onInputChange","actionMeta","filter","item","includes","Weather","isNewWeatherNeedsTobeLoaded","WeatherLoading","WeatherInfo","Temp","consolidated_weather","the_temp","toFixed","City","weather_state_abbr","toLowerCase","src","alt","colorSet","interpolate","HomePage","temp","setTemp","color","setColor","fetchUserWeather","success","message","navigator","getCurrentPosition","document","body","style","backgroundColor","t","tempToPercent","Page","event","target","min","max","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.58a4dba4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"styles_Header__17Zy7\",\"HeaderInner\":\"styles_HeaderInner__8xs6i\",\"SearchLabel\":\"styles_SearchLabel__fhnj1\",\"SearchbarInput\":\"styles_SearchbarInput__3Ca_h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageSection\":\"styles_PageSection__JQN4J\",\"PageSectionInner\":\"styles_PageSectionInner__1GzeA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Slider\":\"styles_Slider__2Shza\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Page\":\"styles_Page__2ZeKF\"};","import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { AppThunk } from 'store/store';\n\nimport { GeolocationCoords, UserGeolocation, GeolocationMessage } from './types';\n\nconst initialState: UserGeolocation = {\n  position: null,\n  loading: 'idle',\n  error: null,\n};\n\nexport const geolocation = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    requestGeolocationPending: (state) => {\n      state.error = null;\n      state.loading = 'pending';\n      state.position = null;\n    },\n    requestGeolocationSuccess: (state, action: PayloadAction<GeolocationCoords>) => {\n      state.error = null;\n      state.loading = 'success';\n      state.position = action.payload;\n    },\n    requestGeolocationError: (state, action: PayloadAction<GeolocationMessage>) => {\n      state.error = action.payload;\n      state.loading = 'error';\n      state.position = null;\n    },\n  },\n});\n\nexport const {\n  requestGeolocationPending,\n  requestGeolocationError,\n  requestGeolocationSuccess,\n} = geolocation.actions;\n\nexport const requestGeolocation = (): AppThunk => async (dispatch) => {\n  dispatch(requestGeolocationPending());\n\n  const success = (position: Position) => {\n    dispatch(\n      requestGeolocationSuccess({\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude,\n      })\n    );\n  };\n\n  const error = (error: PositionError) => {\n    dispatch(requestGeolocationError(error.message));\n  };\n\n  if (!navigator.geolocation) {\n    dispatch(requestGeolocationError('Geolocation is not supported by your browser'));\n  } else {\n    navigator.geolocation.getCurrentPosition(success, error);\n  }\n};\n","import axios, { AxiosRequestConfig } from 'axios';\n\nimport { BASE_URL } from 'constants/urls';\n\ndeclare module 'axios' {\n  export interface AxiosInstance {\n    get<T = any>(url: string, config?: AxiosRequestConfig): Promise<T>;\n    post<T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T>;\n  }\n}\n\nexport type Config = Pick<AxiosRequestConfig, 'baseURL' | 'cancelToken' | 'headers'>;\n\nexport const client = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    common: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  },\n});\n\nclient.interceptors.response.use((response) => response.data);\n","const PROXY_URL = 'https://cors-anywhere.herokuapp.com/';\nexport const API_URL = 'https://www.metaweather.com/api';\nexport const BASE_URL = process.env.NODE_ENV === 'production' ? API_URL : PROXY_URL + API_URL;\nexport const STATIC_URL = 'https://www.metaweather.com/static';\n","import { LocationItem } from 'store/slices/locations/types';\nimport { GeolocationCoords } from 'store/slices/geolocations/types';\n\nimport { client } from './cleint';\n\nconst searchUrl = '/location/search';\n\nexport const getLocationsByQuery = (query: string): Promise<LocationItem[]> =>\n  client.get(searchUrl, { params: { query: query } });\n\nexport const getLocationsByCoords = (coords: GeolocationCoords): Promise<LocationItem[]> =>\n  client.get(searchUrl, { params: { lattlong: `${coords.latitude}, ${coords.longitude}` } });\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { AppThunk } from 'store/store';\nimport { GeolocationCoords } from 'store/slices/geolocations/types';\nimport { getLocationsByCoords, getLocationsByQuery } from 'api/locations';\n\nimport { Option } from 'store/types';\n\nimport { Locations, LocationItem } from './types';\n\nconst initialState: Locations = {\n  list: [],\n  loading: 'idle',\n  error: null,\n  selected: null,\n};\n\nexport const locations = createSlice({\n  name: 'locations',\n  initialState,\n  reducers: {\n    getLocationsPending: (state) => {\n      state.error = null;\n      state.loading = 'pending';\n    },\n    getLocationsSuccess: (state, action: PayloadAction<LocationItem[]>) => {\n      state.error = null;\n      state.list = action.payload;\n      state.loading = 'success';\n    },\n    getLocationsError: (state, action: PayloadAction<string>) => {\n      state.error = action.payload;\n      state.loading = 'error';\n    },\n    setSelectedLocation: (state, action: PayloadAction<Option>) => {\n      state.selected = action.payload;\n    },\n  },\n});\n\nexport const {\n  getLocationsError,\n  getLocationsPending,\n  getLocationsSuccess,\n  setSelectedLocation,\n} = locations.actions;\n\nexport const fetchLocationsByQuery = (query: string): AppThunk => async (dispatch) => {\n  try {\n    dispatch(getLocationsPending());\n\n    const locations = await getLocationsByQuery(query);\n\n    dispatch(getLocationsSuccess(locations));\n  } catch (e) {\n    dispatch(getLocationsError(e));\n  }\n};\n\nexport const fetchLocationsByCoords = (coords: GeolocationCoords): AppThunk => async (dispatch) => {\n  try {\n    dispatch(getLocationsPending());\n\n    const locations = await getLocationsByCoords(coords);\n\n    dispatch(getLocationsSuccess(locations));\n  } catch (e) {\n    dispatch(getLocationsError(e));\n  }\n};\n","import { WeatherItem } from 'store/slices/weather/types';\n\nimport { client } from './cleint';\n\nconst weatherUrl = '/location';\n\nexport const getWeather = (woeid: number): Promise<WeatherItem> =>\n  client.get(`${weatherUrl}/${woeid}/`);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { AppThunk } from 'store/store';\n\nimport { Weather, WeatherItem } from './types';\nimport { getWeather } from 'api/weather';\n\nconst initialState: Weather = {\n  error: null,\n  loading: 'idle',\n  current: null,\n};\n\nexport const weather = createSlice({\n  name: 'weather',\n  initialState,\n  reducers: {\n    getWeatherPending: (state) => {\n      state.error = null;\n      state.loading = 'pending';\n    },\n    getWeatherSuccess: (state, action: PayloadAction<WeatherItem>) => {\n      state.error = null;\n      state.loading = 'success';\n      state.current = action.payload;\n    },\n    getWeatherError: (state, action: PayloadAction<string>) => {\n      state.error = action.payload;\n      state.loading = 'error';\n      state.current = null;\n    },\n  },\n});\n\nexport const { getWeatherError, getWeatherPending, getWeatherSuccess } = weather.actions;\n\nexport const fetchWeatherByWoeid = (woeid: number): AppThunk => async (dispatch) => {\n  try {\n    dispatch(getWeatherPending());\n\n    const weather = await getWeather(woeid);\n\n    dispatch(getWeatherSuccess(weather));\n  } catch (e) {\n    dispatch(getWeatherError(e));\n  }\n};\n","import { combineReducers } from '@reduxjs/toolkit';\n\nimport { geolocation } from './geolocations';\nimport { locations } from './locations';\nimport { weather } from './weather';\n\nexport const RootReducer = combineReducers({\n  geolocation: geolocation.reducer,\n  locations: locations.reducer,\n  weather: weather.reducer,\n});\n\nexport type RootState = ReturnType<typeof RootReducer>;\n","import { configureStore, ThunkAction, Action, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nimport { RootReducer, RootState } from 'store/slices';\n\nexport const store = configureStore({\n  reducer: RootReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: false,\n  }),\n});\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>;\n","import { State } from 'store/state';\n\nexport const selectState = (state: State) => state;\n\nexport const selectGeolocation = (state: State) => state.geolocation;\nexport const selectLocations = (state: State) => state.locations;\nexport const selectWeather = (state: State) => state.weather;\n","import React from 'react';\n\nimport styles from './styles.module.scss';\n\ntype Props = {\n  value: number;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n} & React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\nexport const Slider: React.FunctionComponent<Props> = ({ value = 10, onChange, ...rest }) => {\n  return (\n    <div className={styles.Slider}>\n      <input {...rest} type=\"range\" value={value} onChange={onChange} />\n    </div>\n  );\n};\n","import { LocationItem } from 'store/slices/locations/types';\nimport { Loading, Error } from 'store/types';\n\nexport enum WeatherAbbrs {\n  'sn' = 'Snow',\n  'sl' = 'Sleet',\n  'h' = 'Hail',\n  't' = 'Thunderstorm',\n  'hr' = 'Heavy Rain',\n  'lr' = 'Light Rain',\n  's' = 'Showers',\n  'hc' = 'Heavy Cloud',\n  'lc' = 'Light Cloud',\n  'c' = 'Clear',\n}\n\nexport type ConsolidatedWeather = {\n  id: number;\n  weather_state_name: string;\n  weather_state_abbr: keyof typeof WeatherAbbrs;\n  wind_direction_compass: string;\n  created: string;\n  applicable_date: string;\n  min_temp: number;\n  max_temp: number;\n  the_temp: number;\n  wind_speed: number;\n  wind_direction: number;\n  air_pressure: number;\n  humidity: number;\n  visibility: number;\n  predictability: number;\n};\n\nexport type WeatherSource = {\n  title: string;\n  slug: string;\n  url: string;\n  crawl_rate: number;\n};\n\nexport type WeatherItem = {\n  consolidated_weather: ConsolidatedWeather[];\n  time: string;\n  sun_rise: string;\n  sun_set: string;\n  timezone_name: string;\n  parent: LocationItem;\n  sources: WeatherSource[];\n  title: string;\n  location_type: string;\n  woeid: number;\n  latt_long: string;\n  timezone: string;\n};\n\nexport type Weather = {\n  current: WeatherItem | null;\n  loading: Loading;\n  error: Error;\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport styles from './styles.module.scss';\n\ntype Props = {\n  innerClass?: string;\n  outerClass?: string;\n};\n\nexport const PageSection: React.FunctionComponent<Props> = ({\n  innerClass,\n  outerClass,\n  children,\n}) => (\n  <div className={classnames(outerClass, styles.PageSection)}>\n    <div className={classnames(innerClass, styles.PageSectionInner)}>{children}</div>\n  </div>\n);\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport Select, { ValueType, ActionMeta, InputActionMeta, OptionsType } from 'react-select';\n\nimport { Option } from 'store/types';\nimport { fetchWeatherByWoeid } from 'store/slices/weather';\nimport { selectState } from 'store/selectors';\nimport { useDebounce } from 'hooks';\nimport { fetchLocationsByQuery, setSelectedLocation } from 'store/slices/locations';\n\nimport { PageSection } from 'components/PageSection';\n\nimport styles from './styles.module.scss';\n\nexport const Header: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const { geolocation, locations, weather } = useSelector(selectState, shallowEqual);\n\n  const [options, setOptions] = useState<OptionsType<Option>>([]);\n\n  const fetchLocations = useCallback(async (value: string) => {\n    await dispatch(fetchLocationsByQuery(value));\n  }, []);\n\n  const fetchLocationsDebounced = useDebounce(fetchLocations, 250);\n\n  const mapOptions = useCallback(() => {\n    if (locations.list.length > 0) {\n      setOptions(\n        locations.list.map((location) => ({ value: location.woeid, label: location.title }))\n      );\n    }\n  }, [locations.list]);\n\n  const getWeatherByWoeid = useCallback(async (woeid: number) => {\n    await dispatch(fetchWeatherByWoeid(woeid));\n  }, []);\n\n  const handleInputChange = (value: string, actionMeta: InputActionMeta) => {\n    const currentOptions = locations.list.filter((item) => item.title.includes(value));\n\n    if (currentOptions.length > 0 || value.length < 3) {\n      return;\n    }\n\n    fetchLocationsDebounced(value);\n  };\n\n  const handleChange = (value: ValueType<Option>, action: ActionMeta<Option>) => {\n    // @ts-ignore\n    dispatch(setSelectedLocation(value));\n    // @ts-ignore\n    getWeatherByWoeid(value.value);\n  };\n\n  useEffect(() => {\n    mapOptions();\n  }, [locations.list, mapOptions]);\n\n  useEffect(() => {\n    if (locations.loading === 'success' && !locations.selected && options.length > 0) {\n      dispatch(setSelectedLocation(options[0]));\n      getWeatherByWoeid(Number(options[0].value));\n    }\n  }, [locations.loading, , locations.selected, options, getWeatherByWoeid]);\n\n  const isLoading = Boolean(locations.loading === 'pending' || geolocation.loading === 'pending');\n  const isLoadingWithWeather = isLoading || weather.loading === 'pending';\n\n  return (\n    <PageSection outerClass={styles.Header} innerClass={styles.HeaderInner}>\n      <div className={styles.Searchbar}>\n        <form id=\"form\">\n          <h1 className={styles.SearchLabel}>\n            <label htmlFor=\"locations\">Search city for weather</label>\n          </h1>\n          <Select\n            className={styles.SearchbarInput}\n            name=\"locations\"\n            options={options}\n            value={locations.selected}\n            placeholder={isLoading ? 'Loading...' : 'Start typing city...'}\n            isLoading={isLoadingWithWeather}\n            isDisabled={isLoadingWithWeather}\n            isSearchable\n            onInputChange={handleInputChange}\n            onChange={handleChange}\n          />\n        </form>\n      </div>\n    </PageSection>\n  );\n};\n","import { useEffect, useRef } from 'react';\n\nexport function useDebounce<A extends any[]>(callback: (...args: A) => void, wait: number) {\n  // track args & timeout handle between calls\n  const argsRef = useRef<A>();\n  const timeout = useRef<ReturnType<typeof setTimeout>>();\n\n  function cleanup() {\n    if (timeout.current) {\n      clearTimeout(timeout.current);\n    }\n  }\n\n  // make sure our timeout gets cleared if\n  // our consuming component gets unmounted\n  useEffect(() => cleanup, []);\n\n  return function debouncedCallback(...args: A) {\n    // capture latest args\n    argsRef.current = args;\n\n    // clear debounce timer\n    cleanup();\n\n    // start waiting again\n    timeout.current = setTimeout(() => {\n      if (argsRef.current) {\n        callback(...argsRef.current);\n      }\n    }, wait);\n  };\n}\n","import React from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\n\nimport { WeatherAbbrs } from 'store/slices/weather/types';\nimport { selectState } from 'store/selectors';\nimport { STATIC_URL } from 'constants/urls';\n\nimport styles from './styles.module.scss';\n\nconst ICON_URL = (name: keyof typeof WeatherAbbrs) => `${STATIC_URL}/img/weather/${name}.svg`;\n\nexport const Weather: React.FunctionComponent = () => {\n  const { geolocation, locations, weather } = useSelector(selectState, shallowEqual);\n\n  const isNewWeatherNeedsTobeLoaded = !(\n    locations.loading === 'success' &&\n    locations.list.filter((item) => item.woeid === weather.current?.woeid).length > 0\n  );\n\n  return (\n    <div className={styles.Weather}>\n      {geolocation.loading === 'pending' && (\n        <div className={styles.WeatherLoading}>Requesting geolocation future...</div>\n      )}\n      {locations.loading === 'pending' && (\n        <div className={styles.WeatherLoading}>Getting locations nearby...</div>\n      )}\n      {weather.loading === 'pending' && (\n        <div className={styles.WeatherLoading}>Loading weather for nearest position...</div>\n      )}\n      {weather.loading === 'success' &&\n        locations.loading === 'success' &&\n        isNewWeatherNeedsTobeLoaded && (\n          <div className={styles.WeatherLoading}>Select new location to display the weather...</div>\n        )}\n      {weather.loading === 'success' &&\n        locations.loading !== 'pending' &&\n        !isNewWeatherNeedsTobeLoaded &&\n        weather.current && (\n          <div className={styles.WeatherInfo}>\n            <p>\n              It's{' '}\n              <span className={styles.Temp}>\n                {weather.current?.consolidated_weather[0].the_temp.toFixed(1)} C&deg;\n              </span>{' '}\n              in\n            </p>\n            <h2 className={styles.City}>{weather.current?.title}</h2>\n            <p>\n              and it's{' '}\n              {WeatherAbbrs[\n                weather.current?.consolidated_weather[0].weather_state_abbr\n              ].toLowerCase()}\n            </p>\n            <div>\n              <img\n                src={ICON_URL(weather.current?.consolidated_weather[0].weather_state_abbr)}\n                alt={WeatherAbbrs[weather.current?.consolidated_weather[0].weather_state_abbr]}\n              />\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","import React, { useEffect, useCallback, useState } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport interpolate from 'color-interpolate';\n\nimport { requestGeolocation } from 'store/slices/geolocations';\nimport { fetchLocationsByCoords } from 'store/slices/locations';\nimport { selectState } from 'store/selectors';\nimport { tempToPercent } from 'utils';\n\nimport { Slider } from 'components/UI/Slider';\n\nimport { Header } from './Header';\nimport { Weather } from './Weather';\nimport styles from './styles.module.scss';\n\nconst colorSet = interpolate(['#00ffff', '#fff700', '#ff8c00']);\n\nexport const HomePage: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const { geolocation, weather } = useSelector(selectState, shallowEqual);\n  const [temp, setTemp] = useState(10);\n  const [color, setColor] = useState('#fff700');\n\n  const fetchUserWeather = useCallback(async () => {\n    if (!geolocation.position) {\n      await dispatch(requestGeolocation());\n    }\n\n    if (geolocation.position?.latitude && geolocation.position?.longitude) {\n      const { latitude, longitude } = geolocation.position;\n      await dispatch(fetchLocationsByCoords({ latitude, longitude }));\n    }\n  }, [geolocation.position]);\n\n  const handleSliderChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTemp(Number(event.target.value));\n  };\n\n  useEffect(() => {\n    document.body.style.backgroundColor = color;\n  }, [color]);\n\n  useEffect(() => {\n    setColor(colorSet(tempToPercent(temp) / 100));\n  }, [temp]);\n\n  useEffect(() => {\n    if (weather.current?.consolidated_weather[0].the_temp) {\n      setTemp(weather.current?.consolidated_weather[0].the_temp!);\n    }\n  }, [weather.current?.consolidated_weather[0].the_temp]);\n\n  useEffect(() => {\n    fetchUserWeather();\n  }, [fetchUserWeather]);\n\n  return (\n    <div className={styles.Page}>\n      <Header />\n      <Weather />\n      <Slider onChange={handleSliderChange} value={temp} id=\"temp\" name=\"temp\" min=\"-10\" max=\"30\" />\n    </div>\n  );\n};\n","export const tempToPercent = (temp: number) => {\n  const t = temp + 10;\n\n  if (t === 0) {\n    return 0;\n  }\n\n  return 100 / (40 / t);\n};\n","import React from 'react';\n\nimport { HomePage } from 'pages/Home';\n\nexport const App: React.FunctionComponent = () => {\n  return (\n    // let's pretend there is a router\n    <HomePage />\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { store } from 'store/store';\n\nimport { App } from 'components/App';\n\nimport './styles.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Weather\":\"styles_Weather__22rJv\",\"WeatherInfo\":\"styles_WeatherInfo__26R6c\",\"Temp\":\"styles_Temp__3OTPJ\",\"City\":\"styles_City__2Lome\",\"WeatherLoading\":\"styles_WeatherLoading__1SPF_\"};"],"sourceRoot":""}